while문의 경우 조건부분이 True일 동안에 수행부분이 계속 실행되었었죠? 하지만 if문은 조건부분이 참일 때 수행부분이 딱 한 번만 실행됩니다. 이 때문에 while문은 반복문(loop)이라고 부르고, if문은 조건문(conditional)이라고 부릅니다.

if문
정수 a가 정수 b보다 작은 경우 "a는 b보다 작습니다."를 출력하는 프로그램을 만들어봅시다.

1. a = 3
2. b = 5
3. 
4. if a < b:
5.     print("a는 b보다 작습니다.")
a는 b보다 작습니다.
코드의 (1)~(2)번 줄을 보시면 a의 값은 3이고, b의 값은 5입니다. (4)번 줄의 조건 부분은 3 < 5로 True입니다.

따라서 if문의 조건 부분이 한번 실행됩니다. 결과적으로 "a는 b보다 작습니다."가 출력됩니다. 만약 a가 b보다 크거나 같았다면, if문은 실행되지 않고 아무것도 출력되지 않았을 것입니다.

if문과 else문
만약 a가 b보다 크거나 같을 때, "a는 b보다 작지 않습니다."를 출력하고 싶다면 어떻게 해야할까요? if문과 함께 else문을 사용하면 됩니다.

a = 5
b = 3

if a < b:
    print("a는 b보다 작습니다.")
else:
    print("a는 b보다 작지 않습니다.")
a는 b보다 작지 않습니다.
else문의 수행부분은 if문의 조건부분이 False일때 실행됩니다. 따라서 else문은 별도의 조건문이 없습니다.

위의 코드를 보시죠. a는 5이고, b는 3이기 때문에, if문의 조건 부분인 5 < 3은 False입니다. 파이썬은 if문의 수행부분에 들어가지 않고 else문의 수행부분에 들어가서 "a는 b보다 작지 않습니다."가 출력됩니다.

if문, elif문, else문
세 가지 경우를 구분하여 각각 "a는 b보다 작습니다."와 "a와 b는 같습니다."와 "a는 b보다 큽니다."를 출력하고 싶다면 어떻게 해야할까요? 여태까지 배운 if문과 else문만 활용한다면 아래와 같이 표현할 수 있습니다.

a = 5
b = 3

if a < b:
    print("a는 b보다 작습니다.")
else:
    if a == b:
        print("a와 b는 같습니다.")
    else:
        print("a는 b보다 큽니다.")
a는 b보다 큽니다.
a와 b의 대소를 판단하는 기준이 세 가지 밖에 없기 때문에 위의 코드가 간단해보일 수도 있습니다. 하지만 10개의 경우의 수를 구분해야 하는데, if와 else 두 개만 활용해서는 코드가 길어지고 복잡해지겠죠?

다행히 else문과 if문을 합친 elif문이 있습니다. elif문을 써서 a가 b보다 작은지, 같은지, 큰지 판단해보겠습니다.
# elif문은 그 앞에 if문이 false 인 경우에만 실행되고 true이면 실행되지 않음. 만약 if를 쓸 경우 앞에 if가 true이더라도 실행 됨.

a = 5
b = 3

if a < b:
    print("a는 b보다 작습니다.")
elif a == b:
    print("a와 b는 같습니다.")
else:
    print("a는 b보다 큽니다.")
a는 b보다 큽니다.
왜 이런 결과가 나왔는지 분석해보겠습니다. 처음에 쓰인 if문의 조건 부분은 5 < 3으로 False입니다. 앞에 있는 if문이 거짓이기 때문에, 중간에 있는 elif문이 True인지 False인지 판단할 기회가 주어집니다. 만약 앞에 있는 if문이 True였다면, 그런 기회조차 없었겠죠.

elif문의 조건부분은 5 == 3으로 False입니다. 앞에 있는 if문과 중간에 있는 elif문이 모두 False였기 때문에, else문의 수행부분이 실행됩니다. 결과적으로 "a는 b보다 큽니다."가 출력됩니다.

if, elif, else를 쓸 때에는 이 규칙을 따르면 됩니다:

처음에 if문은 꼭 써야합니다.
중간에 elif문은 0번 이상, 원하는 횟수만큼 쓰면 됩니다.
마지막에 else문은 0번 또는 1번 쓸 수 있습니다.
파이썬은 순서대로 코드를 읽어내려가는데 if문의 조건문이 False일 때에만 elif문으로 넘어가고 (elif문이 하나라도 있다면), elif문의 조건문이 False여야만 그 다음 elif문 또는 else문으로 넘어갑니다. 만약 if문의 조건부분과 모든 elif문의 조건부분이 False면, 파이썬은 else문의 수행부분을 실행합니다 (else문이 있다면).

유상무 잘 생겼다
앞서 '유상무 잘 생겼다' 프로그램은 while문을 적용해 설명했었죠?

아메리카노 커피 이벤트에 세번 당첨되고 싶을 때 아래의 코드를 썼습니다.

coffee_count = 0
while coffee_count는 3보다 작다:
    네이버에 "유상무 잘생겼다"를 검색한다
    당첨되면 coffee_count의 값을 1늘린다.
그런데 (4)번 줄의 당첨되면이라는 말은 '조건'을 나타내는 부분이어서 if문을 배운 뒤 더 자세히 나타낼 수 있다고 했었죠? 검색 등수의 끝 두 숫자가 35일 때 당첨이 되는 구조였기 때문에, 아래와 같이 코드를 구체화할 수 있습니다.

coffee_count = 0
while coffee_count는 3보다 작다:
    네이버에 "유상무 잘생겼다"를 검색한다
    if 검색 등수의 끝 두 숫자가 35일 때:
        coffee_count의 값을 1 늘린다.
날씨 알리미
온도에 따라 입고 나가야 할 옷을 알려주는 프로그램을 작성해보았습니다. 강의에서는 이를 가짜 코드(pseudocode)로만 썼으니, 제대로 된 파이썬 프로그램을 작성해봅시다.

temp = 13

if temp <= 5:
    print("내복과 긴팔과 자켓을 입으세요.")
elif temp <= 10:
    print("긴팔과 자켓을 입으세요.")
elif temp <= 15:
    print("긴팔을 입으세요.")
else:
    print("반팔을 입으세요.")
긴팔을 입으세요.