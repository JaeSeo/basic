열흘간의 매출이 나와 있는 chicken.txt라는 파일이 있습니다.

1일: 453400
2일: 388600
3일: 485300
4일: 477900
5일: 432100
6일: 665300
7일: 592500
8일: 465200
9일: 413200
10일: 523000
이 파일을 읽기 위해서는 open 내장 함수를 쓰면 됩니다. open에는 첫번째 파라미터로 파일 이름을 넘겨주고, 두번째 파라미터로 파일을 읽는다는 의미에서 'read'의 약자인 문자열 'r'을 넘겨줍니다. 나중에 파일을 쓸때는 'write'의 약자인 문자열 'w'를 넘겨주는 것을 보실 수 있습니다.

이것을 in_file이라는 변수에 저장해둡니다.

in_file = open('chicken.txt', 'r')
# window 상에서는 인코딩 문제가 발생함. open('chicken.txt', 'r', encoding = 'utf-8')로 설정해야함.
이제 이 파일을 한줄씩 읽어봅시다. in_file의 type을 출력해보면 <class '_io.TextIOWrapper'>라고 나오지만, for문에 쓰면 in_file을 마치 문자열 리스트(list of strings)처럼 다룰 수 있습니다.

for line in in_file:
    print(line)
for문의 수행부분에 처음 들어갈때는 line이 chicken.txt의 첫번째 줄, 그 다음 들어갈때는 line이 chicken.txt의 두번째 줄... 이런식으로 line이 파일의 각 줄을 문자열로 받고, 파일을 다 읽었을때 for문은 끝납니다.

연 파일은 꼭 닫자
파일을 다 읽었으면 파일을 닫아주는 것이 좋습니다. 파일을 열면 프로그램이 실행되는 동안 메모리를 차지하고 있는데, close 메소드를 쓰면 메모리를 해방시켜줄 수 있습니다.

in_file.close()